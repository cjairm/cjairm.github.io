@use '../../styles/variables' as v;
@use '../../styles/_base';

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: calc(var(--nav-h) + 1rem) v.$spacing-md 0; // Add padding to clear the navbar
  display: flex;
  flex-direction: column;
  gap: v.$spacing-xl;
  position: relative;
  
  @media (min-width: v.$breakpoint-md) {
    padding: calc(var(--nav-h) + 1.5rem) v.$spacing-lg 0; // Slightly more padding on larger screens
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: v.$spacing-2xl;
  }
  
  @media (min-width: v.$breakpoint-lg) {
    padding: calc(var(--nav-h) + 2rem) v.$spacing-xl 0; // More padding on largest screens
  }
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: v.$spacing-md;
  animation: fadeInLeft 0.8s ease-out;
  
  @media (min-width: v.$breakpoint-md) {
    max-width: 60%;
  }
}

.name {
  font-family: v.$font-family-mono;
  font-size: v.$font-size-2xl;
  font-weight: v.$font-weight-bold;
  line-height: v.$line-height-mono;
  color: v.$color-text-primary;
  opacity: 0;
  animation: fadeIn 0.6s ease-out forwards;
  letter-spacing: -0.025em;
  position: relative;
  display: inline-block;
  
  &::before {
    content: '< ';
    color: v.$color-accent;
    opacity: 0.7;
  }
  
  &::after {
    content: ' />';
    color: v.$color-accent;
    opacity: 0.7;
  }
  
  @media (min-width: v.$breakpoint-md) {
    font-size: v.$font-size-3xl;
  }
  
  @media (min-width: v.$breakpoint-lg) {
    font-size: v.$font-size-4xl;
  }
}

.title {
  font-size: v.$font-size-lg;
  font-weight: v.$font-weight-medium;
  color: v.$color-text-primary;
  margin-bottom: v.$spacing-sm;
  opacity: 0;
  animation: fadeIn 0.6s ease-out 0.2s forwards;
  
  @media (min-width: v.$breakpoint-md) {
    font-size: v.$font-size-xl;
  }
}

.credential {
  font-size: v.$font-size-base;
  color: v.$color-text-secondary;
  margin-bottom: v.$spacing-lg;
  opacity: 0;
  animation: fadeIn 0.6s ease-out 0.4s forwards;
  position: relative;
  padding-left: v.$spacing-lg;
  
  &::before {
    content: '//';
    font-family: v.$font-family-mono;
    color: v.$color-accent;
    opacity: 0.8;
    position: absolute;
    left: 0;
  }
  
  @media (min-width: v.$breakpoint-md) {
    font-size: v.$font-size-lg;
  }
}

.cta {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: v.$color-accent;
  color: white;
  font-weight: v.$font-weight-medium;
  padding: v.$spacing-sm v.$spacing-lg;
  border-radius: v.$border-radius-md;
  transition: background-color v.$transition-base, transform v.$transition-base, box-shadow v.$transition-base;
  align-self: flex-start;
  opacity: 0;
  animation: fadeIn 0.6s ease-out 0.6s forwards;
  font-family: v.$font-family-mono;
  letter-spacing: 0.5px;
  
  &:hover, 
  &:focus {
    background-color: v.$color-accent-hover;
    color: white;
    transform: translateY(-2px);
    box-shadow: v.$shadow-md;
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: v.$shadow-sm;
  }
}

.imageContainer {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  animation: fadeInRight 0.8s ease-out 0.3s forwards;
  
  @media (min-width: v.$breakpoint-md) {
    max-width: 40%;
  }
}

.imagePlaceholder {
  width: 100%;
  max-width: 280px;
  aspect-ratio: 1 / 1;
  border-radius: 50%;
  background-color: v.$color-bg-secondary;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: v.$shadow-md;
  overflow: hidden;
  transition: transform v.$transition-slow, box-shadow v.$transition-slow;
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(120deg, rgba(59, 130, 246, 0.1), rgba(255, 255, 255, 0.1));
    z-index: 1;
  }
  
  &:hover {
    transform: scale(1.02) rotate(1deg);
    box-shadow: v.$shadow-lg;
  }
  
  @media (min-width: v.$breakpoint-md) {
    max-width: 320px;
  }
}

.profileImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  position: relative;
  z-index: 1;
  transition: transform v.$transition-base;
  
  .imagePlaceholder:hover & {
    transform: scale(1.05);
  }
}
